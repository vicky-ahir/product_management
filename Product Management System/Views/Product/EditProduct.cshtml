@model Product_Management_System.Models.Admin.Product

@{
    ViewData["Title"] = "EditProduct";
}

@if (!string.IsNullOrEmpty(ViewBag.error_message))
{
    <script>
        $(document).ready(function () {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: '@ViewBag.error_message'
            });
        });
    </script>
}
else if (!string.IsNullOrEmpty(ViewBag.success_message))
{
    <script>
        $(document).ready(function () {
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: '@ViewBag.success_message'
            }).then((result) => {
                debugger
                if (result.isConfirmed) {
                    window.location.href = "/Product/Index"
                }
            });
        });
    </script>
}
@{
    string[] imagePaths = null;
    string jsImagePaths = null;
    if (string.IsNullOrEmpty(ViewBag.success_message) && string.IsNullOrEmpty(ViewBag.success_message))
    {
        imagePaths = Model.Product_Images.Split(',');
        jsImagePaths = string.Join(",", imagePaths.Select(x => "'" + x + "'"));
    }
}
<link href="~/css/product.css" rel="stylesheet" />

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title text-center">Edit Product</h5>
                    <hr>
                    @using (Html.BeginForm("EditProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <form asp-action="EditProduct">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <label asp-for="Product_Name" class="control-label"></label>
                                <input asp-for="Product_Name" class="form-control" />
                                <span asp-validation-for="Product_Name" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Product_Description" class="control-label"></label>
                                <input asp-for="Product_Description" class="form-control" />
                                <span asp-validation-for="Product_Description" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Product_Price" class="control-label"></label>
                                <input asp-for="Product_Price" class="form-control" />
                                <span asp-validation-for="Product_Price" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Product_Images" class="control-label"></label><br/>
                                <input type="hidden" id="Product_Images" asp-for="Product_Images" class="control-label" value="@Model.Product_Images"></input>
                                @if (!string.IsNullOrEmpty(Model.Product_Images))
                                {
                                    @* string[] imagePaths = Model.Product_Images.Split(','); *@
                                    int imagesCount = imagePaths.Length;

                                    foreach (var imagePath in imagePaths)
                                    {
                                        <div class="image-container">
                                            <img src="~/@imagePath" class="editImage" alt="Product Image" />
                                            <button type="button" class="close-button" onclick="removeImage('@imagePath')">&times;</button>
                                        </div>
                                    }
                                }
                                <input asp-for="Images" class="form-control" />
                                <span asp-validation-for="Images" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Product_Quantity" class="control-label"></label>
                                <input asp-for="Product_Quantity" class="form-control" />
                                <span asp-validation-for="Product_Quantity" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Product_Status" class="control-label"></label>
                                <input asp-for="Product_Status" class="form-control" />
                                <span asp-validation-for="Product_Status" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script>
    var imagePaths = [@Html.Raw(jsImagePaths)];
    function removeImage(imgPath) {

        imagePaths.forEach((img, index) => {
            if (img === imgPath) {
                imagePaths.splice(index, 1);
                var updatedProductImages = imagePaths.join(',');
                $('#Product_Images').val(updatedProductImages);
                $('.image-container:eq(' + index + ')').remove();
            }
        });        
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
